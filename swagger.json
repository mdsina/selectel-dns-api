{
  "swagger" : "2.0",
  "info" : {
    "description" : "Simple Selectel DNS API.",
    "version" : "1.0.0",
    "title" : "Selectel DNS API",
    "contact" : {
      "email" : "info@mdsina.ru"
    }
  },
  "tags" : [ {
    "name" : "domains",
    "description" : "Domains' operations"
  }, {
    "name" : "ptr",
    "description" : "Operations with PTR records"
  }, {
    "name" : "records",
    "description" : "Operations with resource records"
  } ],
  "paths" : {
    "/" : {
      "post" : {
        "tags" : [ "domains" ],
        "summary" : "Create new domain",
        "description" : "",
        "operationId" : "addDomain",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Domain info for creation",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/NewDomain"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Domain"
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "409" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "get" : {
        "tags" : [ "domains" ],
        "summary" : "Getting domains info",
        "description" : "",
        "operationId" : "getDomains",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Domain"
              }
            }
          }
        }
      }
    },
    "/{domain_id}" : {
      "get" : {
        "tags" : [ "domains" ],
        "summary" : "Find domain by ID",
        "description" : "Returns a single domain",
        "operationId" : "getDomainById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "domain_id",
          "in" : "path",
          "description" : "ID of domain to return",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Domain"
            }
          },
          "404" : {
            "description" : "Domain not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "domains" ],
        "summary" : "Updates a domain",
        "description" : "",
        "operationId" : "updateDomain",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "domain_id",
          "in" : "path",
          "description" : "ID of domain to update",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "body",
          "in" : "body",
          "description" : "Domain info for update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpdatedDomain"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Domain"
            }
          },
          "404" : {
            "description" : "Tag or domain not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "domains" ],
        "summary" : "Deletes a domain",
        "description" : "",
        "operationId" : "deleteDomain",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "domain_id",
          "in" : "path",
          "description" : "ID of domain to delete",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "404" : {
            "description" : "Domain not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/{domain_name}" : {
      "get" : {
        "tags" : [ "domains" ],
        "summary" : "Find domain by name",
        "description" : "Returns a single domain",
        "operationId" : "getDomainByName",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "domain_name",
          "in" : "path",
          "description" : "name of domain to return",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Domain"
            }
          },
          "404" : {
            "description" : "Domain not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/{domain_id}/export" : {
      "get" : {
        "tags" : [ "domains" ],
        "summary" : "Find domain by name",
        "description" : "Returns a domain's zone file",
        "operationId" : "getDomainZoneFile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "domain_id",
          "in" : "path",
          "description" : "ID of domain to delete",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "404" : {
            "description" : "Domain not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "X-Token" : {
      "type" : "apiKey",
      "name" : "X-Token",
      "in" : "header"
    }
  },
  "security" : [ {
    "X-Token" : [ ]
  } ],
  "definitions" : {
    "Domain" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string",
          "example" : "test.tld"
        },
        "change_date" : {
          "type" : "integer",
          "format" : "int32"
        },
        "create_date" : {
          "type" : "integer",
          "format" : "int32"
        },
        "user_id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      }
    },
    "UpdatedDomain" : {
      "type" : "object",
      "required" : [ "tags" ],
      "properties" : {
        "tags" : {
          "type" : "array",
          "description" : "List of tags' identifiers [id1, ..., idn]",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      }
    },
    "NewDomain" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "test.tld"
        },
        "bind_zone" : {
          "type" : "string",
          "description" : "DNS Zone in BIND format",
          "format" : "textarea"
        }
      }
    },
    "ApiResponse" : {
      "type" : "object",
      "required" : [ "error" ],
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "error" : {
          "type" : "string"
        },
        "field" : {
          "type" : "string"
        }
      }
    }
  },
  "externalDocs" : {
    "description" : "Getting started with Selectel DNS API",
    "url" : "https://blog.selectel.ru/upravlenie-domenami-s-selectel-dns-api/"
  },
  "schemes" : [ "https" ],
  "host" : "api.selectel.ru",
  "basePath" : "/domains/v1"
}