{
  "swagger" : "2.0",
  "info" : {
    "description" : "Simple Selectel DNS API.",
    "version" : "1.0.0",
    "title" : "Selectel DNS API",
    "contact" : {
      "email" : "info@mdsina.ru"
    }
  },
  "tags" : [ {
    "name" : "domains",
    "description" : "Operations with domains"
  }, {
    "name" : "ptr",
    "description" : "Operations with PTR records"
  }, {
    "name" : "records",
    "description" : "Operations with resource records"
  }, {
    "name" : "tags",
    "description" : "Operations with tags"
  } ],
  "paths" : {
    "/" : {
      "post" : {
        "tags" : [ "domains" ],
        "summary" : "Create new domain",
        "description" : "",
        "operationId" : "addDomain",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Domain info for creation",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/NewDomain"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Domain"
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "409" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "get" : {
        "tags" : [ "domains" ],
        "summary" : "Getting domains info",
        "description" : "",
        "operationId" : "getDomains",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Domain"
              }
            }
          }
        }
      }
    },
    "/{domain_id}" : {
      "get" : {
        "tags" : [ "domains" ],
        "summary" : "Find domain by ID",
        "description" : "Returns a single domain",
        "operationId" : "getDomainById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "domain_id",
          "in" : "path",
          "description" : "ID of domain to return",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Domain"
            }
          },
          "404" : {
            "description" : "Domain not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "domains" ],
        "summary" : "Updates a domain",
        "description" : "",
        "operationId" : "updateDomain",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "domain_id",
          "in" : "path",
          "description" : "ID of domain to update",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "body",
          "in" : "body",
          "description" : "Domain info for update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpdatedDomain"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Domain"
            }
          },
          "404" : {
            "description" : "Tag or domain not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "domains" ],
        "summary" : "Deletes a domain",
        "description" : "",
        "operationId" : "deleteDomain",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "domain_id",
          "in" : "path",
          "description" : "ID of domain to delete",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "404" : {
            "description" : "Domain not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/{domain_name}" : {
      "get" : {
        "tags" : [ "domains" ],
        "summary" : "Find domain by name",
        "description" : "Returns a single domain",
        "operationId" : "getDomainByName",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "domain_name",
          "in" : "path",
          "description" : "name of domain to return",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Domain"
            }
          },
          "404" : {
            "description" : "Domain not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/{domain_id}/export" : {
      "get" : {
        "tags" : [ "domains" ],
        "summary" : "Find domain by name",
        "description" : "Returns a domain's zone file",
        "operationId" : "getDomainZoneFile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "domain_id",
          "in" : "path",
          "description" : "ID of domain to delete",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "404" : {
            "description" : "Domain not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/ptr/" : {
      "post" : {
        "tags" : [ "ptr" ],
        "summary" : "Create new PTR record",
        "description" : "",
        "operationId" : "addPtrRecord",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "PTR record info for creation",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/NewOrUpdatedPTRRecord"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PTRRecord"
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "409" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "get" : {
        "tags" : [ "ptr" ],
        "summary" : "Getting PTR records",
        "description" : "",
        "operationId" : "getPtrRecords",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PTRRecord"
              }
            }
          },
          "400" : {
            "description" : "Not valid IP address",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/ptr/{ptr_id}" : {
      "get" : {
        "tags" : [ "ptr" ],
        "summary" : "Find information about PTR record by ID",
        "description" : "Returns a single PTR record",
        "operationId" : "getPtrRecordById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "ptr_id",
          "in" : "path",
          "description" : "ID of PTR record",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PTRRecord"
            }
          },
          "404" : {
            "description" : "PTR record not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ptr" ],
        "summary" : "Updates a PTR record",
        "description" : "",
        "operationId" : "updatePtrRecord",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "ptr_id",
          "in" : "path",
          "description" : "ID of PTR record",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "body",
          "in" : "body",
          "description" : "PTR record info for update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/NewOrUpdatedPTRRecord"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PTRRecord"
            }
          },
          "404" : {
            "description" : "PTR record not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "409" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ptr" ],
        "summary" : "Deletes a PTR record",
        "description" : "",
        "operationId" : "deletePtrRecord",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "ptr_id",
          "in" : "path",
          "description" : "ID of PTR record",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "404" : {
            "description" : "PTR record not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/{domain_id}/records/" : {
      "post" : {
        "tags" : [ "records" ],
        "summary" : "Create resource records for domain",
        "description" : "",
        "operationId" : "addResourceRecord",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Resource record info",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/NewOrUpdatedRecord"
          }
        }, {
          "name" : "domain_id",
          "in" : "path",
          "description" : "ID of domain",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Record"
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "404" : {
            "description" : "Domain not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "409" : {
            "description" : "CNAME record conflict",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "get" : {
        "tags" : [ "records" ],
        "summary" : "Getting records info",
        "description" : "",
        "operationId" : "getResourceRecordsByDomainId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "domain_id",
          "in" : "path",
          "description" : "ID of domain",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Record"
              }
            }
          }
        }
      }
    },
    "/{domain_name}/records/" : {
      "get" : {
        "tags" : [ "records" ],
        "summary" : "Find resource records info for domain by name",
        "description" : "Returns a domain's resource records",
        "operationId" : "getResourceRecordsByDomainName",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "domain_name",
          "in" : "path",
          "description" : "name of domain",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Record"
              }
            }
          },
          "404" : {
            "description" : "Domain not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/{domain_id}/records/{record_id}" : {
      "put" : {
        "tags" : [ "records" ],
        "summary" : "Updates a resource record",
        "description" : "",
        "operationId" : "updateResourceRecord",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "domain_id",
          "in" : "path",
          "description" : "ID of domain",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "record_id",
          "in" : "path",
          "description" : "ID of resource record",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "body",
          "in" : "body",
          "description" : "Record info for update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/NewOrUpdatedRecord"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Record"
            }
          },
          "404" : {
            "description" : "Record or domain not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "409" : {
            "description" : "Record already exist",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "records" ],
        "summary" : "Deletes a resource record",
        "description" : "",
        "operationId" : "deleteResourceRecord",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "domain_id",
          "in" : "path",
          "description" : "ID of domain",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "record_id",
          "in" : "path",
          "description" : "ID of resource record",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "404" : {
            "description" : "Record not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "400" : {
            "description" : "Cannot delete SOA record",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/{domain_name}/records/batch_update" : {
      "patch" : {
        "tags" : [ "records" ],
        "summary" : "Mass update of domain's resources records",
        "operationId" : "batchUpdateResourcesRecords",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "domain_name",
          "in" : "path",
          "description" : "name of domain",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "body",
          "in" : "body",
          "description" : "Records info for update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BatchUpdateModel"
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "Domain not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/tags/" : {
      "post" : {
        "tags" : [ "tags" ],
        "summary" : "Create new tag",
        "description" : "",
        "operationId" : "addNewTag",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Tag info for creation",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/NewOrUpdatedTag"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Tag"
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "404" : {
            "description" : "Domain not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "409" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "get" : {
        "tags" : [ "tags" ],
        "summary" : "Getting tags",
        "description" : "",
        "operationId" : "getTags",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Tag"
              }
            }
          },
          "400" : {
            "description" : "Not valid IP address",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/tags/{tag_id}" : {
      "get" : {
        "tags" : [ "tags" ],
        "summary" : "Find information about tag by ID",
        "description" : "Returns a single tag",
        "operationId" : "getTagById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "tag_id",
          "in" : "path",
          "description" : "ID of tag",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Tag"
            }
          },
          "404" : {
            "description" : "Tag not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "tags" ],
        "summary" : "Updates a tag",
        "description" : "",
        "operationId" : "updateTag",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "tag_id",
          "in" : "path",
          "description" : "ID of tag",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "body",
          "in" : "body",
          "description" : "Tag info for update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/NewOrUpdatedTag"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Tag"
            }
          },
          "404" : {
            "description" : "Tag not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "tags" ],
        "summary" : "Deletes a tag",
        "description" : "",
        "operationId" : "deleteTag",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "tag_id",
          "in" : "path",
          "description" : "ID of tag",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "404" : {
            "description" : "Tag not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "X-Token" : {
      "type" : "apiKey",
      "name" : "X-Token",
      "in" : "header"
    }
  },
  "security" : [ {
    "X-Token" : [ ]
  } ],
  "definitions" : {
    "BatchUpdateModel" : {
      "type" : "object",
      "properties" : {
        "delete" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Record"
          }
        },
        "update" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Record"
          }
        },
        "create" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Record"
          }
        }
      }
    },
    "NewOrUpdatedRecord" : {
      "type" : "object",
      "required" : [ "name", "type" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "description" : "Record type (SOA, NS, A/AAAA, CNAME, SRV, MX, TXT, SPF)"
        },
        "ttl" : {
          "type" : "integer",
          "format" : "int32"
        },
        "email" : {
          "type" : "string",
          "description" : "Email of domain's admin (only for SOA records)"
        },
        "content" : {
          "type" : "string",
          "description" : "Record content (not for SRV)"
        },
        "location" : {
          "type" : "string"
        },
        "weight" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Relative weight for records with the same priority (only for SRV)"
        },
        "port" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Service port (only for SRV)"
        },
        "target" : {
          "type" : "string",
          "description" : "Service hostname (only for SRV)"
        },
        "priority" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Record priority (only for SRV and MX records)"
        }
      }
    },
    "Record" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "description" : "Record type (SOA, NS, A/AAAA, CNAME, SRV, MX, TXT, SPF)"
        },
        "ttl" : {
          "type" : "integer",
          "format" : "int32"
        },
        "email" : {
          "type" : "string",
          "description" : "Email of domain's admin (only for SOA records)"
        },
        "content" : {
          "type" : "string",
          "description" : "Record content (not for SRV)"
        },
        "weight" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Relative weight for records with the same priority (only for SRV)"
        },
        "port" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Service port (only for SRV)"
        },
        "target" : {
          "type" : "string",
          "description" : "Service hostname (only for SRV)"
        },
        "priority" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Record priority (only for SRV and MX records)"
        },
        "create_date" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Create Date in UNIX Timestamp"
        },
        "change_date" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Change Date in UNIX Timestamp"
        },
        "expire" : {
          "type" : "integer",
          "format" : "int32"
        },
        "refresh" : {
          "type" : "integer",
          "format" : "int32"
        },
        "retry" : {
          "type" : "integer",
          "format" : "int32"
        },
        "minimum" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ns" : {
          "type" : "string",
          "example" : "ns1.selectel.org"
        }
      }
    },
    "PTRRecord" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "description" : "PTR record identifier",
          "format" : "int64"
        },
        "ip" : {
          "type" : "string"
        },
        "content" : {
          "type" : "string",
          "description" : "Domain name"
        },
        "user_id" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "NewOrUpdatedPTRRecord" : {
      "type" : "object",
      "required" : [ "ip", "content" ],
      "properties" : {
        "ip" : {
          "type" : "string",
          "description" : "IPv4 or IPv6 address",
          "example" : "127.0.0.1"
        },
        "content" : {
          "type" : "string",
          "description" : "Domain name",
          "example" : "test.tld"
        }
      }
    },
    "Domain" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string",
          "example" : "test.tld"
        },
        "change_date" : {
          "type" : "integer",
          "format" : "int32"
        },
        "create_date" : {
          "type" : "integer",
          "format" : "int32"
        },
        "user_id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      }
    },
    "UpdatedDomain" : {
      "type" : "object",
      "required" : [ "tags" ],
      "properties" : {
        "tags" : {
          "type" : "array",
          "description" : "List of tags' identifiers [id1, ..., idn]",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      }
    },
    "NewDomain" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "test.tld"
        },
        "bind_zone" : {
          "type" : "string",
          "description" : "DNS Zone in BIND format",
          "format" : "textarea"
        }
      }
    },
    "NewOrUpdatedTag" : {
      "required" : [ "name" ],
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "test.tld"
        },
        "domains" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      }
    },
    "Tag" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string",
          "example" : "test.tld"
        },
        "domains" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      }
    },
    "ApiResponse" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "error" : {
          "type" : "string"
        },
        "field" : {
          "type" : "string"
        }
      }
    }
  },
  "externalDocs" : {
    "description" : "Getting started with Selectel DNS API",
    "url" : "https://blog.selectel.ru/upravlenie-domenami-s-selectel-dns-api/"
  },
  "schemes" : [ "https" ],
  "host" : "api.selectel.ru",
  "basePath" : "/domains/v1"
}
